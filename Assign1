import numpy as np
import matplotlib.pyplot as plt

#1 배열 거꾸로 나열하기
Num1 = np.array([])
Inv = np.zeros(10)
for i in range(0,10) :
  Num1 = np.append(Num1,[i])
for i in range(0,10) :
  Inv[i] = Num1[9-i]
print(Inv)

#2 3*3, 9*1 생성
Num2 = np.array([])
for i in range(0,9) :
  Num2 = np.append(Num2, [i])
row = np.array([[Num2[0],Num2[1],Num2[2]],[Num2[3],Num2[4],Num2[5]],[Num2[6],Num2[7],Num2[8]]])
print(row)
row = np.array([[Num2[0]],[Num2[1]],[Num2[2]],[Num2[3]],[Num2[4]],[Num2[5]],[Num2[6]],[Num2[7]],[Num2[8]]])
print(row)

#3 10*10, 내부에 0이 있는 행렬 생성

Num3 = np.ones((10,10))
Num3[1:9, 1:9] = 0
print(Num3)

#4 5*5 체스보드 패턴
Num4 = np.ones((5,5))
Num4[::2,::2] = 0
Num4[1::2,1::2] = 0
print(Num4)

#5 5~8 부호 반전
Num5 = np.array([])
for i in range(0,10) :
  Num5 = np.append(Num5,[i])
Num5[5:9] *= -1
print(Num5)

#6 배열의 내적
Num6_x = np.array([[4,5],[7,10]])
Num6_y = np.array([[2,3],[1,5]])
Num6 = Num6_x @ Num6_y
print(Num6)

#7 시그모이드 미분 함수
X = np.linspace(-10,10,100)
Y = 1/(1 + np.exp(-X))
Y2 = Y * (1 - Y)
plt.plot(X,Y)
plt.plot(X,Y2)
plt.show()
